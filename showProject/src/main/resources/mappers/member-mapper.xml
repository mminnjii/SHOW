<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="memberMapper">
	

	
	
	


  

	<resultMap type="Member" id="memberResultSet">
		<result column="USER_NO" property="userNo"/>
		<result column="USER_ID" property="userId"/>
		<result column="USER_PWD" property="userPwd"/>
		<result column="USER_NAME" property="userName"/>
		<result column="USER_RRN" property="userRrn"/>
		<result column="PHONE" property="phone"/>
		<result column="EMAIL" property="email"/>
		<result column="ADDRESS" property="address"/>
		<result column="ENROLL_DATE" property="enrollDate"/>
		<result column="MODIFY_DATE" property="modifyDate"/>
		<result column="ORIGIN_NAME" property="originName"/>
		<result column="CHANGE_NAME" property="changeName"/>
		<result column="RANK" property="rank"/>
		<result column="SUBSCRIBE" property="subscribe"/>
		<result column="STATUS" property="status"/>
	</resultMap>
	
	<select id="loginMember" parameterType="Member" resultMap="memberResultSet">
		SELECT *
		FROM MEMBER
		WHERE USER_ID = #{userId}
		AND STATUS = 'Y'
	</select>
	
	<insert id="insertMember" parameterType="Member">
		INSERT INTO MEMBER(USER_NO,
						   USER_ID,
						   USER_PWD,
						   USER_NAME,
						   USER_RRN,
						   PHONE,
						   EMAIL)
					VALUES(SEQ_MNO.NEXTVAL,
						   #{userId},
						   #{userPwd},
						   #{userName},
						   #{userRrn},
						   #{phone},
						   #{email})
	</insert>
	
	<select id="idCheck" parameterType="String" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE USER_ID = #{checkId}
		AND STATUS = 'Y'
	</select>
	
	<select id="memberPwd" parameterType="String" resultType="String">
		SELECT USER_PWD
		FROM MEMBER
		WHERE USER_ID = #{userId}
		AND STATUS = 'Y'
	</select>

	<update id="updateMember" parameterType="Member">
		UPDATE MEMBER
		SET USER_NAME = #{userName},
			USER_RRN = #{userRrn},
			PHONE = #{phone},
			EMAIL = #{email},
			MODIFY_DATE = SYSDATE,
			ORIGIN_NAME = #{originName},
			CHANGE_NAME = #{changeName}
		WHERE USER_ID = #{userId}
	</update>

	<update id="memberAddress" parameterType="hashmap">
		UPDATE MEMBER
		SET ADDRESS = #{address}
		WHERE USER_ID = #{userId}
	</update>
	
	<update id="updatePassword" parameterType="Member">
		UPDATE MEMBER
		SET USER_PWD = #{userPwd}
		WHERE USER_ID = #{userId}
	</update>
	
	<update id="updateNewPassword" parameterType="hashmap">
		UPDATE MEMBER
		SET USER_PWD = #{encPwd}
		WHERE USER_ID = #{userId}
	</update>
	
	<update id="deleteMember" parameterType="Member">
		UPDATE MEMBER
		SET STATUS = 'N'
		WHERE USER_ID = #{userId}
	</update>
	
	<select id="findId" parameterType="hashmap" resultType="String">
		SELECT USER_ID
		FROM MEMBER
		WHERE USER_NAME = #{userName}
		AND EMAIL = #{email}
	</select>
	
	<select id="findPwd" parameterType="hashmap" resultType="_int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE USER_ID = #{id}
		AND USER_NAME = #{name}
		AND STATUS = 'Y'
	</select>





</mapper>

